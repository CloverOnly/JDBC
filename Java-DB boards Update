package javadb;

import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException; 

public class BoardUpdateExample {
	public static void main(String[] args) {
		//연결
		Connection conn = null;
		try {
			//JDbC Driver 등록 
			Class.forName("com.mysql.cj.jdbc.Driver");
			//DB 연결
			conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/servletex?useUnicode=true&characterEncoding=utf8"
													,"root", "1234");
			
			//String은 변경 불가능한 문자열을 생성하지만 StringBuilder는 변경 가능한 문자열을 만들어 주기 때문에, String을 합치는 작업 시 하나의 대안이 될 스 있다.
			String sql = new StringBuilder()
						.append("UPDATE boards SET ") //SET 다음 스페이스 주의
						.append("btitle=?, ")
						.append("bcontent=?, ")
						.append("bfilename=?, ")
						.append("bfiledata=? ")
						.append("WHERE bno=?")
						.toString();
			/*
			  PreparedStatement
			  선처리 방식으로 미리 컴파일된 SQL문을 가지고 있다가 동적으로 칼럼값을 채워 질의문을 수행할 수 있어 효율적인 SQL문을 구사할 수 있다.
			  웹 개발에서는 보안문제(SQL injection) 때문에 PreparedStatement를 사용한다.
			 */
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, "눈사람");
			pstmt.setString(2, "눈으로만든사람");
			pstmt.setString(3, "snowman.jpg");
			pstmt.setBlob(4, new FileInputStream("C:\\Users\\이영진\\git\\Java-DB\\javadb\\src\\javadb\\snowman.jpg"));
			pstmt.setInt(5, 1);
			
			//executeUpdate(): DB실행
			int rows = pstmt.executeUpdate();
			System.out.println("수정된 행 수:" + rows);
			
			pstmt.close();
			//Exception 예외 처리중 가장 상위 객체
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			if(conn != null) {
				try {
					conn.close();
				}catch(SQLException r) {}
			}
		}
	}

}
