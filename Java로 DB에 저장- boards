package javadb;

import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class BoardInsertExample {
	public static void main(String[] args) {
		Connection conn = null;
		try {
			//연결
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/servletex?useUnicode=true&characterEncoding=utf8"
					,"root", "1234");
			
			//INSERT 문을 String타입 변수 sql에 문자열로 대입
			String sql = ""+ "INSERT INTO boards (btitle, bcontent, bwriter, bdate, bfilename, bfiledate )" 
													+  "VALUES (?, ?, ?, now(), ?, ?) ";
			
			//PreparedStatement 얻기 및 값 지정
			//매개변수화된 SQL문을 실행하기 위해 Connection의 prepareStatement()메소드로 부터 PreparedStatement를 얻음
			PreparedStatement pstmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
			pstmt.setString(1, "눈오는 날");
			pstmt.setString(2, "함박눈이 내려오");
			pstmt.setString(3, "winter");
			pstmt.setString(4, "snow.jpg");
			pstmt.setBlob(5, new FileInputStream("snowman.jpg")); 
			//값 지정
			
			//값 지정 후 executeUpdate()메소드를 호출하면 SQL문이 실행되면서 boards 테이블에 1개 행이 저장
			int rows = pstmt.executeUpdate();
			System.out.println("저장된 행 수:" + rows);
			if(rows == 1) {
				ResultSet rs = pstmt.getGeneratedKeys();
				if(rs.next()) {
					int bno = rs.getInt(1);
					System.out.println("저장된 bno: " + bno);
				} rs.close();
			}
			//close()메소드를 호출하면 PreparedStatement가 사용했던 메모리 해제
			pstmt.close();
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			if(conn != null) {
				try {
					conn.close();
				}catch(SQLException e){}
			}
		}
	}
}
